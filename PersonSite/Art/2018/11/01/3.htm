

<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml">
<head><title>
	红领巾社区
</title><meta charset="utf-8" /><meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <!--开启响应式布局-->
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ -->
    <meta name="description" /><meta name="author" /><link rel="icon" href="/images/logo.jpg" /><link href="/js/bootstrap/css/bootstrap.css" rel="stylesheet" />
    <script src="/js/jquery.min.js"></script>
    <script src="/js/bootstrap/js/bootstrap.min.js" type="text/javascript"></script>
    <script src="/js/common.js"></script>
    <style>
        /*
        * Style tweaks
        * --------------------------------------------------
        */
        html,
        body {
            overflow-x: hidden; /* Prevent scroll on narrow devices */
            /*font-family: KaiTi;*/
        }

        body {
            padding-top: 70px;
        }

        footer {
            padding: 30px 0;
        }
    </style>
    <script type="text/javascript">
        function modaldemo() {
            $("#modal-demo").modal("show");
        }
        //向服务器请求当前登录状态，然后切换登录区域的显示
        var checkLogin = function () {
            $.post("/ajax/CheckLogin.ashx", function (data) {
                var strs = data.split("|");
                if (strs[0] == "no") {
                    //alert("木有登陆");
                    $("#divLoginArea").show();
                    $("#divLoginOutArea").hide();
                }
                else {
                    //切换“登录”、“注销”的两个层
                    $("#divLoginArea").hide();
                    $("#divLoginOutArea").show();
                    $("#spanUserName").text(strs[1]);//把当前登录用户名显示出来
                }
            });
        }

        var loginFinish = function (data) {
            if (data == "ok") {
                //alert("成功");
                $("#divLogin").dialog("close"); //登录成功关闭窗口
                checkLogin();//登录成功，刷新登录区域的显示
            }
            else {
                alert("用户名密码错误");
            }
        };
        $(function () {
            $("#btnLogin").click(function () {
                //todo:检验用户名、密码不能为空
                var username = $("#txtUserName").val();
                var password = $("#txtPwd").val();
                $.post("/ajax/UserLogin.ashx",
                    { "username": username, "password": password },
                    function (data) {
                        if (data == "ok") {
                            $("#modal-demo").modal("hide");
                            checkLogin();//登录成功，刷新登录区域的显示
                        }
                        else {
                            alert("用户名密码错误");
                        }
                    });
            });
        });

        $(function () {
            checkLogin();//刚进入页面的时候也是先向服务器查询当前登录状态
            $("#btnLogout").click(function () {
                $.post("/ajax/Logout.ashx", function () {
                    checkLogin();//刷新显示
                });
            });
        });

        $(function () {
            //绑定菜单列表
            $.post("/ajax/GetChannel.ashx", { "action": "parent" }, function (data) {
                var chas = $.parseJSON(data);
                for (var i = 0; i < chas.length; i++) {
                    var cha = chas[i];
                    $('<li><a href="/Art/ViewChannel.aspx?id=' + cha.Id + '">' + cha.Name + '</a></li>').appendTo("#header-menu");
                }
            })
        })
    </script>
    
    
    
    
    <script src="/js/common.js"></script>
    <script type="text/javascript">
        //提交评论完成后的处理
        var postFinish = function (data) {
            //var oEditor = CKEDITOR.instances.txtComment;
            if (data == "ok") {
                //把评论的内容添加到界面上
                $("<li>"+$("#txtComment").val()+"</li>").appendTo("#ulComments");
                //$("<li>" + oEditor.getData() + "</li>").appendTo("#ulComments");


            }
            else if (data == "mod") {
                alert("等待审核");
            }
            else if (data == "banned") {
                alert("您的评论内容含有禁用词汇，请注意文明用语！");
            }
            else {
                alert("服务器返回错误:" + data);
            }
            //清空CKEditor
            //oEditor.setData("");//设置txtComment的内容也不能影响CKEditor
            $("#txtComment").val("");//评论提交成功后清除文本框
        };
        $(function () {
            //启动的时候通过ajax加载评论
            $.post("/ajax/GetComments.ashx", { "articleId": "272" },
            function (data) {
                var comments = $.parseJSON(data);//和eval一样是把json字符串转换为对象
                for (var i = 0; i < comments.length; i++) {
                    //把每条评论添加到ulComments上
                    var comment = comments[i];
                    $("<li>" + ubbToHtml(comment.Msg) + "</li>").appendTo("#ulComments");
                }
            });
            //todo:做静态页的时候思考为什么通过ajax加载评论，为什么有的网站在另外一个页面显示评论
            $("#btnPostComment").click(function () {
                var msg = $("#txtComment").val();
                //判断是否为空
                if (msg == null || msg == "" || msg == undefined) {
                    alert("请输入评论内容");
                    return;
                }
                //CKEditor是把原先的textarea替换（replace）调，然后画自己的内容，所以读取textarea的value并不能得到CKEditor当前编辑的内容
                //var oEditor = CKEDITOR.instances.txtComment;
                //var msg = oEditor.getData();
                //通过ajax提交评论
                $.post("/ajax/PostComment.ashx",
                    { "articleId": "272", "msg": msg },
                    postFinish);
            });
        });

        //    $(function () {
        //        CKEDITOR.replace('txtComment',
        //{
        //    extraPlugins: 'bbcode',
        //    removePlugins: 'bidi,button,dialogadvtab,div,filebrowser,flash,format,forms,horizontalrule,iframe,indent,justify,liststyle,pagebreak,showborders,stylescombo,table,tabletools,templates',
        //    toolbar:
        //    [
        //        ['Source', '-', 'Save', 'NewPage', '-', 'Undo', 'Redo'],
        //        ['Find', 'Replace', '-', 'SelectAll', 'RemoveFormat'],
        //        ['Link', 'Unlink', 'Image'],
        //        '/',
        //        ['FontSize', 'Bold', 'Italic', 'Underline'],
        //        ['NumberedList', 'BulletedList', '-', 'Blockquote'],
        //        ['TextColor', '-', 'Smiley', 'SpecialChar', '-', 'Maximize']
        //    ],
        //    smiley_images:
        //    [
        //        'regular_smile.gif', 'sad_smile.gif', 'wink_smile.gif', 'teeth_smile.gif', 'tounge_smile.gif',
        //        'embaressed_smile.gif', 'omg_smile.gif', 'whatchutalkingabout_smile.gif', 'angel_smile.gif', 'shades_smile.gif',
        //        'cry_smile.gif', 'kiss.gif'
        //    ],
        //    smiley_descriptions:
        //    [
        //        'smiley', 'sad', 'wink', 'laugh', 'cheeky', 'blush', 'surprise',
        //        'indecision', 'angel', 'cool', 'crying', 'kiss'
        //    ]
        //});
        //    });
    </script>
    <script type="text/javascript">
        var rateFinish = function (data) {
            if (data == "duplicate") {
                alert("同一段视频24小时之内只能打分一次");
            }
            else {
                alert("打分成功");
            }
        }
        var imgStyle = function () {
            $("img").addClass("img-responsive");
        }

        $(function () {
            imgStyle();
            $("#btnDing").button({
                icons: { primary: 'ui-icon-check' }
            }).click(function () {
                $.post("/ajax/RateArticle.ashx",
                { "articleId": "272", "action": 1 }, rateFinish);
            });
            $("#btnCai").button({
                icons: { primary: 'ui-icon-closethick' }
            }).click(function () {
                $.post("/ajax/RateArticle.ashx",
                { "articleId": "272", "action": -1 }, rateFinish);
            });
        });
    </script>
</head>
<body>
    <nav class="navbar navbar-fixed-top navbar-inverse">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a class="navbar-brand" href="/Index.aspx">红领巾社区</a>
            </div>
            <div id="navbar" class="collapse navbar-collapse">
                <ul class="nav navbar-nav" id="header-menu">
                    <li class="active"><a href="/Index.aspx">首页</a></li>
                </ul>
                <ul class="nav navbar-nav navbar-right">
                    <li id="divLoginArea">
                        <a href="javascript:;" onclick="modaldemo()">登录</a>
                    </li>
                    <li id="divLoginOutArea" class="dropdown">
                        <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">欢迎您，<span id="spanUserName"></span><span class="caret"></span></a>
                        <ul class="dropdown-menu">
                            <li><a href="/FindPassword.aspx">修改密码</a></li>
                            <li><a href="javascript:;" id="btnLogout">注销</a></li>
                        </ul>
                    </li>
                </ul>

            </div>

            <!-- /.nav-collapse -->
        </div>
        <!-- /.container -->
    </nav>
    <!-- /.navbar -->
    <div class="container">
        <form method="post" action="./ViewArticle.aspx?id=272" id="form1">
<input type="hidden" name="__VIEWSTATE" id="__VIEWSTATE" value="/wEPDwULLTIwNzQ0MjkzMjhkZNbbeL38Ox0VsgdXW+ie5WCZQJ22fxZlT9COXWbfTw20" />

            
    <div class="row">
        <div class="col-lg-12">
            <h4 class="text-primary">
                SQL练习<br />
            </h4>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <p>
	--创建数据库<br />
	create database RShDB<br />
	use RShDB<br />
	<br />
	--创建表--<br />
	create table Student<br />
	(Sno CHAR(9) PRIMARY KEY,<br />
	Sname char(20) unique,<br />
	Ssex char(2) ,<br />
	Sage smallint,<br />
	Sdept Char(20)<br />
	);<br />
	<br />
	create table Course<br />
	(Cno char(4) primary key,<br />
	Cname char(40),<br />
	Cpno char(4),<br />
	Ccredit smallint,<br />
	foreign key (Cpno) references Course(Cno)<br />
	&nbsp;);<br />
	<br />
	create table SC<br />
	(Sno char(9),<br />
	Cno char(4),<br />
	Grade smallint,<br />
	primary key (Sno,Cno),<br />
	foreign key (Sno) references Student(sno),<br />
	foreign key (Cno) references Course(Cno)<br />
	);<br />
	--修改表<br />
	alter table Student<br />
	add S_entrance date;<br />
	<br />
	alter table Student<br />
	alter column Sage smallint;<br />
	<br />
	alter table Course<br />
	add unique (Cname);<br />
	<br />
	<br />
	------插入数据<br />
	----插入原组<br />
	--Student表<br />
	insert into Student(Sno,Sname,Ssex,Sdept,Sage)<br />
	values (&#39;200215121&#39;,&#39;angelbaby&#39;,&#39;男&#39;,&#39;Is&#39;,&#39;18&#39;);<br />
	insert into Student<br />
	values (&#39;200215122&#39;,&#39;小兵&#39;,&#39;男&#39;,&#39;18&#39;,&#39;CS&#39;);<br />
	insert into Student<br />
	values (&#39;200215123&#39;,&#39;小黑&#39;,&#39;女&#39;,&#39;18&#39;,&#39;CF&#39;);<br />
	insert into Student<br />
	values (&#39;200215124&#39;,&#39;小白&#39;,&#39;女&#39;,&#39;18&#39;,&#39;GF&#39;);<br />
	insert into Student<br />
	values (&#39;200215125&#39;,&#39;小红&#39;,&#39;男&#39;,&#39;18&#39;,&#39;DF&#39;);<br />
	<br />
	--Course表<br />
	insert into Course(Cno,Cname,Ccredit)<br />
	values (&#39;1&#39;,&#39;数据库&#39;,&#39;4&#39;);<br />
	insert into Course(Cno,Cname,Ccredit)<br />
	values (&#39;2&#39;,&#39;数学&#39;,&#39;4&#39;);<br />
	insert into Course(Cno,Cname,Ccredit)<br />
	values (&#39;3&#39;,&#39;信息系统&#39;,&#39;4&#39;);<br />
	insert into Course(Cno,Cname,Ccredit)<br />
	values (&#39;4&#39;,&#39;操作系统&#39;,&#39;4&#39;);<br />
	insert into Course(Cno,Cname,Ccredit)<br />
	values (&#39;5&#39;,&#39;数据结构&#39;,&#39;4&#39;);<br />
	insert into Course(Cno,Cname,Ccredit)<br />
	values (&#39;6&#39;,&#39;Pascal语言&#39;,&#39;4&#39;);<br />
	<br />
	--SC表<br />
	<br />
	insert into SC<br />
	values (&#39;200215121&#39;,&#39;1&#39;,&#39;80&#39;);<br />
	insert into SC<br />
	values (&#39;200215122&#39;,&#39;2&#39;,&#39;80&#39;);<br />
	insert into SC<br />
	values (&#39;200215123&#39;,&#39;3&#39;,&#39;80&#39;);<br />
	insert into SC<br />
	values (&#39;200215124&#39;,&#39;4&#39;,&#39;80&#39;);<br />
	insert into SC<br />
	values (&#39;200215125&#39;,&#39;6&#39;,&#39;80&#39;);<br />
	<br />
	----插入子查询结果<br />
	create table Dept_age(Sdept char(15), Avg_age smallint);<br />
	<br />
	insert into Dept_age (Sdept,Avg_age)<br />
	select Sdept,AVG(Sage)<br />
	from Student group by Sdept;<br />
	<br />
	<br />
	<br />
	--修改数据<br />
	select * from Student where Sno=&#39;200215123&#39;;<br />
	<br />
	update Student set Sage = 22 where Sno =&#39;200215123&#39;;<br />
	<br />
	select ASCII(&#39;a&#39;)<br />
	<br />
	select count(*) from Student<br />
	--删除表数据，还原标识<br />
	truncate table [Guid]<br />
	<br />
	select * from [Guid]<br />
	<br />
	insert into [Guid] values (default,&#39;hiahia&#39;)<br />
	update [Guid] set Gname=999<br />
	<br />
	delete [Guid]<br />
	<br />
	--多条件分组，看相等是否为组，为组后用 having<br />
	select Ssex,Sdept as Sximing,count(*) as Stest from Student group by Sdept,Ssex having&nbsp; count(*)&gt;1<br />
	--分页<br />
	select top 3 * from Student order by Sage desc<br />
	select * from Student order by Sage desc<br />
	<br />
	<br />
	select top 3 * from Student where Sno not in<br />
	(<br />
	select top 3 Sno from Student order by Sage desc<br />
	) order by Sage desc<br />
	<br />
	select ROW_NUMBER() over (order by Sno asc) ,* from Student<br />
	--去掉重复<br />
	select sdept from Student<br />
	<br />
	select distinct sdept from Student<br />
	--多个列时和group by 一样,按照多个列的组合判断是否重复<br />
	select distinct sdept,ssex from Student<br />
	<br />
	--合并结果集,并去除重复项<br />
	select sno from student<br />
	union<br />
	select sno from SC<br />
	--select sno from student<br />
	--intersect<br />
	--select sno from SC<br />
	--合并结果集,不去除重复项<br />
	select sno from student<br />
	union all<br />
	select sno from SC<br />
	<br />
	select &#39;阿三地方&#39;,max(sno) from student<br />
	union all<br />
	select &#39;阿三地方&#39;,min(sno) from SC<br />
	<br />
	select sno,sage from student<br />
	union all<br />
	select &#39;年龄总和&#39;,sum(sage) from Student<br />
	<br />
	select abs(1)<br />
	--数字函数<br />
	select ceiling(1.01)<br />
	select floor(1.01)<br />
	--第一个数值,第二个位数<br />
	select round(1.51,1)<br />
	select round(1.56,1)<br />
	--字符串函数<br />
	select len (&#39;123说法&#39;)--字符（text保存的是字节数据，所以不能用len）<br />
	select datalength(&#39;123说法&#39;)--字节<br />
	select lower(&#39;A&#39;),upper(&#39;a&#39;)<br />
	--去左右空格<br />
	select &#39;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; A&#39;,ltrim(&#39;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; A&#39;)<br />
	select datalength(&#39;A&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#39;),datalength(rtrim(&#39;A&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#39;));<br />
	--参数，待截取位置（起始位置），截取长度<br />
	select substring(&#39;aaabbbcccddd&#39;,4,3)<br />
	--后三年，--year，day，month，<br />
	select dateadd(year,3,getdate())<br />
	<br />
	select dateadd (day,CompanyDetail.Term,BillingDate) from DuesDetail,CompanyDetail<br />
	<br />
	select getdate() -3<br />
	--参数，运算部分，开始时间，结束时间<br />
	select datediff(year,getdate(),&#39;2007&#39;)<br />
	--参数，运算部分，时间<br />
	select DATEPART(year,getdate())<br />
	--根据入学年份，分组求个数<br />
	select datepart(year,sindate),count(*) from student group by datepart(year,sindate)<br />
	--getdate() 加时间是允许为空数据时间自动填充<br />
	<br />
	----类型转换函数<br />
	<br />
	select left(&#39;asddf第一个&#39;,5)<br />
	select right(&#39;asddf第一个&#39;,3)<br />
	--参数：要转换的值 as 要转换的类型<br />
	select cast(right(&#39;asddf第一个2022-12-13&#39;,10) as datetime)<br />
	<br />
	select convert(datetime,right(&#39;asddf第一个2022-12-13&#39;,10))<br />
	--替换null 的值<br />
	select isnull(cpno,&#39;空值&#39;) from course<br />
	<br />
	<br />
	--case函数<br />
	<br />
	select sage,case sage&nbsp; when 10 then &#39;小屁孩&#39;<br />
	when 16 then &#39;女大十八变&#39;<br />
	else &#39;普通人&#39;<br />
	end<br />
	from student<br />
	<br />
	select sage,(case&nbsp;&nbsp;<br />
	when sage&lt;=10 then &#39;小屁孩&#39; --then后面除了给常量还能给字段<br />
	when sage&gt;=18 then &#39;女大十八变&#39;<br />
	else &#39;普通人&#39;<br />
	end) as &#39;身份&#39;<br />
	from student<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	--表连接join<br />
	--join是和哪个表连接，on后市连接的关系是什么（多表）<br />
	--（*）inner join 、left join、right join<br />
	--联合连接<br />
	select * from student s,sc<br />
	where s.sno=sc.sno;<br />
	--join<br />
	--内连接 inner join（where子句中使用的是连接语句，称为隐性连接，inner join &hellip;&hellip;on子句产生的为显性连接，）<br />
	select s.sname,sc.* from student s inner join sc on s.sno =sc.sno;<br />
	--左外连接（左连接）保证左表数据全部显示为中央核心目标<br />
	select * from student s left join sc<br />
	on s.sno=sc.sno;<br />
	--参照<br />
	select * from student s,sc<br />
	where s.sno=sc.sno;<br />
	--右外连接（右连接）保证右表数据全部显示为中央核心目标<br />
	select * from student s right join sc<br />
	on s.sno=sc.sno;<br />
	--全连接 保证左右两标数据全显示出来<br />
	select * from student s full join sc<br />
	on s.sno=sc.sno;<br />
	<br />
	----连接查询<br />
	--等值连接（连接运算符不是=，其他运算符成为非等值连接）<br />
	select Student.*,SC.* from Student,SC where Student.sno = SC.sno;<br />
	--自然连接<br />
	select student.sno,sname,sage,sdept,cno,grade from student,sc where student.sno=sc.sno;<br />
	--自身连接<br />
	select firsta.Cno ,seconda.cpno from course firsta,course seconda where firsta.cpno=seconda.cno;<br />
	--外连接(左)<br />
	select student.Sno,sname,ssex,sage,sdept,cno,grade from student,sc where student.sno=sc.sno<br />
	select student.Sno,sname,ssex,sage,sdept,cno,grade from student Left outer Join sc on(student.sno=sc.sno);<br />
	--复合条件连接<br />
	select student.sno,sname from student,sc where student.sno=sc.sno and sc.cno =&#39;2&#39; and sc.Grade&gt;90;<br />
	--多表连接<br />
	select student.sno,sname,cname,grade from student,sc,course where student.sno =sc.sno and sc.cno=course.cno;<br />
	----嵌套查询<br />
	select sname from student where sno in (select sno from sc where cno=&#39;2&#39;)<br />
	-- in谓词子查询<br />
	select sno,sname,sdept from student where sdept in (select sdept from student where sname=&#39;小红&#39;)<br />
	--比较运算符子查询<br />
	select sno,sname,sdept from student where sdept = (select sdept from student where sname=&#39;小红&#39;)<br />
	--自身连接<br />
	select s1.sno,s1.sname,s1.sdept from student s1,student s2 where s1.sdept=s2.sdept and s2.sname=&#39;小红&#39;;<br />
	<br />
	select f.cno,s.cpno from course f, course s where f.cpno=s.cno;<br />
	--exists谓词子查询<br />
	select sno,sname,sdept from student s1 where exists (select * from student s2 where s2.sdept=s1.sdept and s2.sname =&#39;小红&#39;)<br />
	<br />
	select sname from student,sc where student.sno=sc.sno and sc.cno=&#39;1&#39;<br />
	<br />
	select sname from student where exists (select * from sc where sno =student.sno and cno=&#39;1&#39;)<br />
	--not exists<br />
	select sname from student where not exists (select * from sc where sno =student .sno and cno=&#39;1&#39;)<br />
	<br />
	select * from Course where&nbsp; exists (<br />
	select * from student,course,sc where sc.sno =student.sno and sc.cno =course.cno)<br />
	<br />
	select sname from student where not exists (select * from Course where not exists (select * from sc where sno=student.sno and cno=course.cno))<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	----视图<br />
	select * from sview<br />
	--局部变量 先声明再赋值<br />
	--declare @变量名 数据类型<br />
	--set @变量名=值 set 用于普通的赋值<br />
	--select @变量名 =值 用于从表中查询数据并赋值<br />
	--全局变量（系统变量）<br />
	--全局变量必须以标记@@作为前缀，如@@version<br />
	--只能读取，不能修改<br />
	@@ERROR --最后一个Tsql错误的错误号<br />
	@@identity --最后一次插入的标识值<br />
	@@language --当前使用的语言<br />
	@@servername --服务器名称<br />
	@@version --sql版本信息<br />
	select @@IDENTITY<br />
	declare @name varchar(50)--声明变量<br />
	set @name =&#39;天津天气真好啊 &#39; -- 变量赋值<br />
	--select @name=&#39;是啊&#39;<br />
	select @name -- 查询变量<br />
	--从数据表中拿值付给变量时，注意确保查询的结果只有一个值<br />
	select @name=sname from student where sno=200215121<br />
	select @name -- 查询变量<br />
	<br />
	--同时声明多个变量<br />
	declare @age int ,@hisage int<br />
	--if 选择语句<br />
	declare @age int<br />
	set @age =110<br />
	if @age&gt;1000<br />
	begin<br />
	select * from student<br />
	end<br />
	select @age<br />
	<br />
	declare @avgm money<br />
	select @avgm = avg(sage) from student<br />
	if @avgm &lt;=14<br />
	begin<br />
	select &#39;A&#39;<br />
	select top 2 * from student order by ssex desc<br />
	end<br />
	else<br />
	begin<br />
	select &#39;B&#39;<br />
	select top 2 * from student order by ssex desc<br />
	end<br />
	<br />
	<br />
	--while 循环<br />
	declare @a int<br />
	set @a=1<br />
	while(@a&lt;50)<br />
	begin<br />
	print str(@a)<br />
	set @a=@a+1<br />
	end<br />
	<br />
	select &#39;asdf&#39;<br />
	print &#39;asdfsasdf&#39;<br />
	--事务<br />
	--开始事务：begin transaction<br />
	--事务提交:commit transaction<br />
	--事务回滚：rollback transaction<br />
	<br />
	<br />
	--判定某条语句执行是否出错<br />
	--全局变量：@@error<br />
	--例：set @errorsum=@errorsum+@@error<br />
	<br />
	select * from student<br />
	update student&nbsp; set ssex=-1 where sno=200215121<br />
	-----------------------------------------------<br />
	--@@error每使用一次就清零<br />
	declare @errnum int<br />
	set @errnum=0<br />
	begin transaction&nbsp; --开始事务<br />
	update student&nbsp; set ssex=-1 where sno=200215121<br />
	set @errnum = @errnum+@@error --追加错误数值<br />
	update student&nbsp; set ssex=2 where sno=200215123<br />
	set @errnum = @errnum+@@error --追加错误数值<br />
	if (@errnum = 0)-- 通过判断错误数值 确定是否提交事务<br />
	begin<br />
	commit transaction --无错误的话，我们来提交数据<br />
	end<br />
	else<br />
	begin<br />
	rollback transaction --回滚事务<br />
	end<br />
	select &#39;01&#39; +ltrim (str(@@error))<br />
	<br />
	-------------------------------------<br />
	declare @errnum int<br />
	set @errnum = 0<br />
	begin transaction<br />
	update student set sname=&#39;小王八&#39; where sno=&#39;200215124&#39;<br />
	set @errnum =@errnum + @@error<br />
	delete student where sno=&#39;200215121&#39;<br />
	set @errnum =@errnum + @@error<br />
	if(@errnum=0)<br />
	begin--<br />
	commit transaction<br />
	print &#39;ok&#39;<br />
	end<br />
	else<br />
	begin<br />
	rollback transaction<br />
	print &#39;f&#39;<br />
	end<br />
	select * from student<br />
	<br />
	---------系统存储过程-------------<br />
	execute sp_databases<br />
	<br />
	exec sp_helptext<br />
	<br />
	--创建存储过程<br />
	create proc usp_getbook<br />
	@cateId int<br />
	as<br />
	select * from Student where SID =@cateId<br />
	select * from SC<br />
	<br />
	exec usp_getbook 2<br />
	<br />
	--修改存储过程<br />
	alter proc usp_getbook<br />
	@cateid int<br />
	as<br />
	begin<br />
	<br />
	select * from student where sno=@cateid<br />
	select * from course<br />
	end<br />
	exec usp_getbookbycateId 2<br />
	<br />
	<br />
	--通过 row_number（）分页 存储过程<br />
	--创建<br />
	create proc usp_GetPagedBooks<br />
	@pageindex int=1<br />
	as<br />
	select * from<br />
	(select row_number()over(order by sno) as Id,* from student) as a<br />
	where a.Id &gt; (@pageindex-1) * 5 and a.id &lt;= @pageindex*5<br />
	--传入第一个参数，第二个参数用默认值<br />
	exec usp_GetPagedBooks 2<br />
	<br />
	--修改，加显示行数<br />
	<br />
	alter proc usp_GetPagedBooks<br />
	@pageindex int=1,<br />
	@pagesize int =5<br />
	as<br />
	select * from<br />
	(select row_number()over(order by sid) as Id,* from student) as a<br />
	where a.Id &gt; (@pageindex-1) * @pagesize and a.id &lt;= @pageindex*@pagesize<br />
	--穿入两个参数（按照穿入参数的顺序先后赋值）<br />
	exec usp_GetPagedBooks 1,3<br />
	--显示传入两个参数（和顺序无关）<br />
	exec usp_GetPagedBooks @pageindex = 2, @pagesize =3<br />
	--显示传入第二个参数（第一个参数使用默认值）<br />
	exec usp_GetPagedBooks @pagesize =3<br />
	<br />
	<br />
	--测试普通输入输出类型的参数在存储过程中被修改并不会影响变量本身<br />
	alter proc usp_GetPagedBooksOI<br />
	@pageindex int=1,<br />
	@pagesize int =5,<br />
	@rowcount int output,<br />
	@pagecount int output<br />
	as<br />
	select * from<br />
	(select row_number()over(order by sid) as Id,* from student) as a<br />
	where a.Id &gt; (@pageindex-1) * @pagesize and a.id &lt;= @pageindex*@pagesize<br />
	<br />
	<br />
	select @rowCount =count(*) from Student<br />
	select @pagecount = ceiling(convert(float,@rowcount) /convert(float,@pagesize))<br />
	set @pageindex =110<br />
	set @pagesize =10000<br />
	<br />
	<br />
	declare @pi int,@ps int ,@rc int,@pc int<br />
	set @pi =2--变量：保存页码<br />
	set @ps =4--变量：保存页容量（每页显示多少行）<br />
	set @rc =0--变量：总行数<br />
	set @pc =0 --变量：总页数<br />
	exec usp_GetPagedBooksOI @pi,@ps,@rc output,@pc output<br />
	select @pi,@ps,@rc,@pc<br />
	<br />
	--这里创建了一个 针对分类表 删除 操作发生时调用的代码<br />
	--创建 触发器 触发器名称 on 表名 for操作名<br />
	ALTER trigger [dbo].[Scfq] on [dbo].[Student]<br />
	for delete<br />
	as-- 后面跟触发器要执行的代码<br />
	begin<br />
	select * from student<br />
	end<br />
	<br />
	--触发器中是否可以按照一定条件取消 出发我这个触发器的命令操作<br />
	<br />
	--创建一个带事物回滚的触发器<br />
	create trigger testforinsert on [dbo].[Student]<br />
	for insert<br />
	as-- 后面跟触发器要执行的代码<br />
	begin<br />
	&nbsp;&nbsp;&nbsp; &nbsp;begin transaction<br />
	&nbsp;&nbsp;&nbsp; &nbsp;rollback transaction<br />
	<br />
	end<br />
	<br />
	<br />
	select * from student<br />
	--显示事物<br />
	--隐试事物<br />
	insert student(sno,sname)<br />
	values (&#39;12343234&#39;,&#39;fklsdajkl&#39;)<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	&nbsp;</p>

        </div>
    </div>
    <div class="row">
        <div class="col-lg-10">
            <strong>发表时间：2018/11/1 14:57:40
            </strong>
        </div>
        <div class="col-lg-2">
            <a class="btn btn-default" id="btnDing"><span class="glyphicon glyphicon-thumbs-up"></span>推荐</a>
            <a class="btn btn-default" id="btnCai"><span class="glyphicon glyphicon-thumbs-down "></span>反对</a>
        </div>
    </div>
    <hr />
    <div class="row">
        <div class="col-lg-12">
            <h4>评论列表</h4>
            <div class="">
                <ol id="ulComments">
                </ol>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <textarea class="form-control" placeholder="说两句吧..." id="txtComment"></textarea><br />
        </div>
    </div>
    <div class="row">
        <div class="col-lg-1 col-lg-offset-11">
            <input type="button" class="btn btn-default" value="评论" id="btnPostComment" />
        </div>
    </div>

        
<input type="hidden" name="__VIEWSTATEGENERATOR" id="__VIEWSTATEGENERATOR" value="E1B165C8" /></form>
        
        
        <hr />
        <footer>
            <p>&copy; 本站所有信息均采集于互联网,如有侵权请联系：qctvip@vip.163.com</p>
            <div class="hidden">
            <script src="https://s19.cnzz.com/z_stat.php?id=1275095046&web_id=1275095046" type="text/javascript"></script>
            </div>
        </footer>
    </div>
    <!--登录对话框-->
    <div id="modal-demo" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content radius">
                <div class="modal-header">
                    <h3 class="modal-title">用户登录</h3>
                    <a class="close" data-dismiss="modal" aria-hidden="true" href="javascript:void();">×</a>
                </div>
                <div class="modal-body">
                    <form class="form-horizontal">
                        <div class="form-group">
                            <label for="txtUserName" class="col-sm-2 col-md-5 control-label">用户名</label>
                            <div class="col-sm-3">
                                <input type="email" class="form-control" id="txtUserName" placeholder="用户名" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="txtPwd" class="col-sm-2 col-md-5 control-label">密码</label>
                            <div class="col-sm-3">
                                <input type="password" class="form-control" id="txtPwd" placeholder="密码" />
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-offset-2 col-sm-10 col-md-offset-5">
                                <div class="checkbox">
                                    <label>
                                        <input type="checkbox" />
                                        记住密码
                                    </label>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <div class="text-left">
                        <a href="/RegUser.aspx">注册</a>
                        <a href="/FindPassword.aspx">忘记密码?</a>
                    </div>
                    <button class="btn btn-primary" id="btnLogin">确定</button>
                    <button class="btn" data-dismiss="modal" aria-hidden="true">关闭</button>
                </div>
            </div>
        </div>
    </div>

<!-- Visual Studio Browser Link -->
<script type="application/json" id="__browserLink_initializationData">
    {"appName":"Unknown","requestId":"d3db45f85b8d4478a60d038c52b6e607"}
</script>
<script type="text/javascript" src="http://localhost:3285/f03e4909866e4711a8dd495b7f39e2ba/browserLink" async="async"></script>
<!-- End Browser Link -->

</body>
</html>
