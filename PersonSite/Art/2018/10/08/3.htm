

<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml">
<head><title>

</title><meta charset="utf-8" /><meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <!--开启响应式布局-->
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ -->
    <meta name="description" /><meta name="author" /><link rel="icon" href="https://v3.bootcss.com/favicon.ico" /><link href="/js/bootstrap/css/bootstrap.min.css" rel="stylesheet" />
    
    
    <script src="/js/jquery.min.js"></script>
    <script src="/js/bootstrap/js/bootstrap.min.js" type="text/javascript"></script>
    <style>
        /*
        * Style tweaks
        * --------------------------------------------------
        */
        html,
        body {
            overflow-x: hidden; /* Prevent scroll on narrow devices */
        }

        body {
            padding-top: 70px;
        }

        footer {
            padding: 30px 0;
        }
    </style>
    <script type="text/javascript">
        function ShowLoginDiv() {
            $("#divLogin").dialog({
                height: 200,
                modal: true
            });
        }
        //向服务器请求当前登录状态，然后切换登录区域的显示
        var checkLogin = function () {
            $.post("/ajax/CheckLogin.ashx", function (data) {
                var strs = data.split("|");
                if (strs[0] == "no") {
                    //alert("木有登陆");
                    $("#divLoginArea").show();
                    $("#divLoginOutArea").hide();
                }
                else {
                    //切换“登录”、“注销”的两个层
                    $("#divLoginArea").hide();
                    $("#divLoginOutArea").show();
                    $("#spanUserName").text(strs[1]);//把当前登录用户名显示出来
                }
            });
        }

        var loginFinish = function (data) {
            if (data == "ok") {
                //alert("成功");
                $("#divLogin").dialog("close"); //登录成功关闭窗口
                checkLogin();//登录成功，刷新登录区域的显示
            }
            else {
                alert("用户名密码错误");
            }
        };
        $(function () {
            $("#btnShowLoginDlg").click(function () {
                ShowLoginDiv();
            });
            $("#btnLogin").click(function () {
                //todo:检验用户名、密码不能为空
                var username = $("#txtUserName").val();
                var password = $("#txtPwd").val();
                $.post("/ajax/UserLogin.ashx",
                    { "username": username, "password": password },
                    loginFinish);
            });
        });

        $(function () {
            checkLogin();//刚进入页面的时候也是先向服务器查询当前登录状态
            $("#btnLogout").click(function () {
                $.post("/ajax/Logout.ashx", function () {
                    checkLogin();//刷新显示
                });
            });
        });
    </script>
    
    <script src="/js/ckeditor/ckeditor.js" type="text/javascript"></script>
    <script src="/js/ckeditor/config.js" type="text/javascript"></script>
    <link href="/js/ckeditor/contents.css" rel="stylesheet" type="text/css" />
    <script type="text/javascript">
        //提交评论完成后的处理
        var postFinish= function(data){
            var oEditor = CKEDITOR.instances.txtComment;
            if(data=="ok")
            {
                
                //把评论的内容添加到界面上
                //$("<li>"+$("#txtComment").val()+"</li>").appendTo("#ulComments");
                $("<li>"+oEditor.getData()+"</li>").appendTo("#ulComments");
         

            }
            else if(data=="mod")
            {
               alert("等待审核");
            }
            else if(data=="banned")
            {
                alert("您的评论内容含有禁用词汇，请注意文明用语！");
            }
            else{
                alert("服务器返回错误:"+data);
            }
                            //清空CKEditor
           oEditor.setData("");//设置txtComment的内容也不能影响CKEditor
                //$("#txtComment").val("");//评论提交成功后清除文本框
        };
        $(function () {
            //启动的时候通过ajax加载评论
            $.post("/ajax/GetComments.ashx", {"articleId":13},
            function(data){
                var comments = $.parseJSON(data);//和eval一样是把json字符串转换为对象
                for(var i=0;i<comments.length;i++)
                {
                    //把每条评论添加到ulComments上
                    var comment = comments[i];
                    $("<li>"+comment.Msg+"</li>").appendTo("#ulComments");
                }
            });
            //todo:做静态页的时候思考为什么通过ajax加载评论，为什么有的网站在另外一个页面显示评论
            $("#btnPostComment").click(function(){
                //var msg = $("#txtComment").val();
                //CKEditor是把原先的textarea替换（replace）调，然后画自己的内容，所以读取textarea的value并不能得到CKEditor当前编辑的内容
                var oEditor = CKEDITOR.instances.txtComment;
                var msg = oEditor.getData();
                //通过ajax提交评论
                $.post("/ajax/PostComment.ashx",
                    {"articleId":13,"msg":msg},
                    postFinish);
            });
        });

        $(function(){
            CKEDITOR.replace( 'txtComment',
	{
		extraPlugins : 'bbcode',
		removePlugins : 'bidi,button,dialogadvtab,div,filebrowser,flash,format,forms,horizontalrule,iframe,indent,justify,liststyle,pagebreak,showborders,stylescombo,table,tabletools,templates',
		toolbar :
		[
			['Source', '-', 'Save','NewPage','-','Undo','Redo'],
			['Find','Replace','-','SelectAll','RemoveFormat'],
			['Link', 'Unlink', 'Image'],
			'/',
			['FontSize', 'Bold', 'Italic','Underline'],
			['NumberedList','BulletedList','-','Blockquote'],
			['TextColor', '-', 'Smiley','SpecialChar', '-', 'Maximize']
		],
		smiley_images :
		[
			'regular_smile.gif','sad_smile.gif','wink_smile.gif','teeth_smile.gif','tounge_smile.gif',
			'embaressed_smile.gif','omg_smile.gif','whatchutalkingabout_smile.gif','angel_smile.gif','shades_smile.gif',
			'cry_smile.gif','kiss.gif'
		],
		smiley_descriptions :
		[
			'smiley', 'sad', 'wink', 'laugh', 'cheeky', 'blush', 'surprise',
			'indecision', 'angel', 'cool', 'crying', 'kiss'
		]
	});	        
        });
    </script>
</head>
<body>
    <form method="post" action="./ViewArticle.aspx?id=13" id="form1">
<input type="hidden" name="__VIEWSTATE" id="__VIEWSTATE" value="/wEPDwUJOTM4OTQ1MzE4ZGRjjjr7p/Img6/7j71B0U6qwFtYpR3ryoWtKH7X2iwKdw==" />

        <nav class="navbar navbar-fixed-top navbar-inverse">
            <div class="container">
                <div class="navbar-header">
                    <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
                        <span class="sr-only">Toggle navigation</span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>
                    <a class="navbar-brand" href="#">红领巾影院</a>
                </div>
                <div id="navbar" class="collapse navbar-collapse">
                    <ul class="nav navbar-nav">
                        <li class="active"><a href="/Index.aspx">首页</a></li>
                        <li><a href="/Video/VideoList.aspx">流行</a></li>
                        <li><a href="/Video/VideoList.aspx">经典</a></li>
                        <li><a href="/Art/ViewChannel.aspx?id=0">资讯</a></li>
                    </ul>
                    <ul class="nav navbar-nav navbar-right">
                        <li><a href="#">登录</a></li>
                        <li class="dropdown">
                            <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">个人 <span class="caret"></span></a>
                            <ul class="dropdown-menu">
                                <li><a href="https://kdy666.com/">看电影</a></li>
                                <li><a href="#">Another action</a></li>
                                <li><a href="#">Something else here</a></li>
                                <li role="separator" class="divider"></li>
                                <li><a href="#">Separated link</a></li>
                            </ul>
                        </li>
                    </ul>
                </div>
                <!-- /.nav-collapse -->
            </div>
            <!-- /.container -->
        </nav>
        <!-- /.navbar -->

        

        <div class="container">
            
    C#入门基础笔记<br />
    <br />
    <p><p>
	C#数据类型：值类型和引用类型 （两者相互转换时进行装箱和拆箱）<br />
	<br />
	值类型：<br />
	简单类型（整数类型、布尔类型、字符类型、实数类型）、<br />
	结构类型（struct，结构类型可以作为另一个结构的成员类型。每个变量叫成员）、<br />
	枚举类型（为一组在逻辑上密不可分的整数值提供便于记忆的符号。每个整型变量叫元素）。<br />
	<br />
	引用类型（引用类型实际存储数据引用值的地址）：<br />
	类（数据成员（常量、域、事件）、函数成员（方法、属性、索引指示器、运算符、构造函数、析构函数）、嵌套类型）、<br />
	类支持集成机制&mdash;&mdash;代码重用和设计重用<br />
	System.object类和System.string类<br />
	注意：类和结构都包含了自己的成员，区别在于类是引用类型、结构是值类型。<br />
	<br />
	代表(delegate，相当于指针原型，而且相对安全)、<br />
	C和C++中，滥用指针给程序的安全性埋下了隐患，所以C#中取消了指针的概念，用的话要声明&ldquo;非安全&rdquo;unsafe。<br />
	注意：不能有返回值、不能带有输出类型的参数。<br />
	delegate int MyDelegate();<br />
	MyClass mc = new MyClass();<br />
	MyDeleaget d1&nbsp; =new MyDelegate(mc.InstanceMethod);<br />
	d1();<br />
	//指向静态方法<br />
	MyDelegate d2 = new MyDelegate(MyClass.StaticMethod);<br />
	d2();<br />
	数组（System.Array）、<br />
	数组是一组类型相同的有序数据，按照数组名、数据元素的类型和维数来进行描述。<br />
	接口。<br />
	<br />
	C#装箱(boxing)和拆箱(unboxing)：<br />
	值类型和引用类型之间的转换，称为绑定链接。<br />
	装箱：把值类型转换成引用类型，也就是创建一个对象实例并把这个值赋值给它<br />
	拆箱：把引用类型转换成值类型，<br />
	注意：转换时必须遵循类型兼容原则。<br />
	<br />
	C#变量（variable）：<br />
	静态变量、非静态变量、数组元素、值参数、引用参数（ref int a）、输出参数(out int b)、局部变量。<br />
	常量 public const double d=1.0;<br />
	<br />
	C#类型转换：<br />
	隐式转换和显示转换（强制类型转换）<br />
	<br />
	C#表达式：<br />
	逻辑与操作符 &amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 位运算，a和b均为1，则为1<br />
	逻辑或操作符 |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 位运算，a和b有1则为1。<br />
	条件与操作符 &amp;&amp;&nbsp;&nbsp;&nbsp; 二元操作符，a和b返回值相同时为真。<br />
	条件或操作符 ||&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 二元操作符，a和b有真则为真。<br />
	<br />
	C#类：<br />
	类的修饰符：<br />
	public 不限制<br />
	protected 只能从所在类和派生类进行访问<br />
	internal 当前类访问<br />
	private 对.net中的应用程序或库才能访问<br />
	<br />
	C#方法：<br />
	参数类型，值参数、引用型参数（ref）、输出参数（out）、数组参数（params）<br />
	值参数：传递参数（形参）时把实参拷贝后的值传给方法，以保证实际值是安全的。<br />
	引用参数：不开辟新的内存，传递形参时是把实参在内存中的地址传递给方法。<br />
	输出参数：不开辟新的内存，调用方法前无需对变量进行初始化。可返回多个结果。<br />
	&nbsp;</p>
</p>
    
    <span>评论区：</span><br />
    <div>
        <ul id="ulComments">
            
        </ul>
    </div>
    <textarea cols="20" rows="5" id="txtComment"></textarea>

    <input type="button" value="评论" id="btnPostComment" />
    

            <hr />
            <footer>
                <p>&copy; 本站所有信息均采集于互联网,如有侵权请联系：qctvip@vip.163.com</p>
            </footer>
        </div>
        <!--/.container-->
    
<input type="hidden" name="__VIEWSTATEGENERATOR" id="__VIEWSTATEGENERATOR" value="E1B165C8" /></form>


<!-- Visual Studio Browser Link -->
<script type="application/json" id="__browserLink_initializationData">
    {"appName":"Unknown","requestId":"3873b7a7351b41cfbaa17d3a7c3a675b"}
</script>
<script type="text/javascript" src="http://localhost:12238/9cb91f0c41f347d9b82707e4d0f63c7b/browserLink" async="async"></script>
<!-- End Browser Link -->

</body>
</html>
